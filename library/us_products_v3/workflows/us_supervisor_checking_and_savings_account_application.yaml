# Copyright @ 2020 Thought Machine Group Limited. All rights reserved.
---
name: Us Supervisor Checking and Savings Account Application
instance_title: Us Supervisor Checking and Savings Account Application
description: A workflow to apply for linked US Checking and Savings accounts
schema_version: 3.2.0
definition_version: 1.1.3
starting_state: retrieve_customer_accounts
end_states:
  - state: accounts_opened_successfully
    result: SUCCESSFUL
  - state: open_linked_accounts_failed
    result: FAILED

states:
  retrieve_customer_accounts:
    entry_actions:
      save_to_global_state:
        context_keys:
          - user_id
        new_key_value_pairs:
          customer_id: ${user_id}
      vault_callback:
        path: core-api/v1/accounts
        method: GET
        arguments:
          stakeholder_id: ${user_id}
          account_statuses: [ACCOUNT_STATUS_OPEN]
          page_size: 30
          page_token: ${next_page_token:}
        response_event: accounts_retrieved
        response_fields:
          - key_name: retrieved_accounts
            response_json_path: accounts
            extract_singleton_element: true
          - key_name: next_page_token
            response_json_path: next_page_token
            extract_singleton_element: true
    transitions:
      - to: build_account_list
        trigger: accounts_retrieved

  build_account_list:
    display_name: Build account list
    type: transform
    transform_ref: build_account_list
    transitions:
      - to: save_accounts_list
        description: Next page
        trigger: retrieve_more_accounts
      - to: get_account_to_check
        description: All accounts retrieved
        trigger: all_accounts_retrieved

  save_accounts_list:
    display_name: Save accounts list
    entry_actions:
      save_to_global_state:
        context_keys:
          - customer_open_accounts_to_check
          - next_page_token
    type: transform
    transform: |
      return ['context_saved', {}]
    transitions:
      - to: retrieve_customer_accounts
        trigger: context_saved

  get_account_to_check:
    display_name: Get account to check
    description: Get account id for the customer account
    type: transform
    transform_ref: extract_account_id
    transitions:
      - to: retrieve_account_plan_assocs
        trigger: account_id_extracted
      - to: capture_account_tier_savings
        trigger: no_more_accounts_to_check

  retrieve_account_plan_assocs:
    display_name: Retrieve account plan associations
    description: Retrieve account plan associations
    expected_context_keys:
      - customer_open_accounts_to_check
      - account_id_to_check
    entry_actions:
      save_to_global_state:
        context_keys:
          - customer_open_accounts_to_check
      vault_callback:
        path: core-api/v1/account-plan-assocs
        method: GET
        arguments:
          account_ids:
            - ${account_id_to_check}
          page_size: 30
        response_fields:
          - key_name: plan_assocs
            response_json_path: account_plan_assocs
            extract_singleton_element: true
        response_event: plan_assocs_retrieved
    transitions:
      - to: check_for_existing_plan
        description: Check if a plan exists for this account
        trigger: plan_assocs_retrieved

  check_for_existing_plan:
    display_name: Check for existing plan
    description: Check for existing plan
    expected_context_keys:
      - plan_assocs
    type: transform
    transform_ref: check_for_plans
    transitions:
      - to: get_account_to_check
        trigger: no_existing_plan_found
      - to: open_linked_accounts_failed
        trigger: existing_plan_found

  capture_account_tier_savings:
    display_name: Capture account tier for Savings Account
    state_ui:
      ui_actions:
        - action_id: account tier savings
          event: account_tier_savings_selected
          display_name: Select account tier for Savings Account
          ui_inputs:
            - key: account_tier_savings
              display_name: Account tier for Savings Account
              string_input: {}
              json_definition:
                value_selector:
                  values:
                    - value: "&{UPPER_TIER}"
                      label: "Upper Tier"
                    - value: "&{MIDDLE_TIER}"
                      label: "Middle Tier"
                    - value: "&{LOWER_TIER}"
                      label: "Lower Tier"
    exit_actions:
      save_to_global_state:
        context_keys:
          - account_tier_savings
    transitions:
      - to: capture_interest_application_preferences_savings
        trigger: account_tier_savings_selected
        description: account tier has been selected

  capture_interest_application_preferences_savings:
    display_name: Capture interest application preferences for Savings Account
    state_ui:
      ui_actions:
        - action_id: set_interest_application_day
          event: savings_interest_application_day_provided
          display_name: Set interest application day for Savings Account
          ui_inputs:
            - key: interest_application_day_savings
              display_name: Interest application day (1-31)
              number_input:
                default_value: 1
                min_value: 1
                max_value: 31
                precision: 0
                step: 1
    transitions:
      - to: create_savings_account
        description: Interest application day captured
        trigger: savings_interest_application_day_provided

  create_savings_account:
    display_name: Create the Savings account
    description: Create the requested Savings account by sending a request to core-api/v1/accounts
    expected_context_keys:
      - interest_application_day_savings
    entry_actions:
      vault_callback:
        path: core-api/v1/accounts
        method: POST
        arguments:
          request_id: generate_uuid()
          account:
            id: generate_uuid()
            product_id: us_savings_account_v3
            status: ACCOUNT_STATUS_PENDING
            stakeholder_ids:
              - ${customer_id}
            permitted_denominations:
              - "USD"
            instance_param_vals:
              interest_application_day: ${interest_application_day_savings}
            details: {}
        response_fields:
          - key_name: savings_account_id
            response_json_path: id
            extract_singleton_element: true
        response_event: savings_account_created
    exit_actions:
      save_to_global_state:
        context_keys:
          - savings_account_id
    transitions:
      - to: create_account_tier_flag_savings
        description: Account created
        trigger: savings_account_created

  create_account_tier_flag_savings:
    display_name: Create account tier flag for Savings Account
    entry_actions:
      vault_callback:
        path: core-api/v1/flags
        method: POST
        arguments:
          flag:
            flagDefinitionId: ${account_tier_savings}
            accountId: ${savings_account_id}
            description: Setting savings tier
          requestId: generate_uuid()
        response_event: account_tier_savings_flag_created
    transitions:
      - to: open_savings_account
        trigger: account_tier_savings_flag_created

  open_savings_account:
    display_name: Open Savings account
    description: Open Savings account
    entry_actions:
      vault_callback:
        path: core-api/v1/accounts/{account.id}
        method: PUT
        arguments:
          request_id: generate_uuid()
          account:
            id: ${savings_account_id}
            status: ACCOUNT_STATUS_OPEN
          update_mask: status
    transitions:
      - to: choose_overdraft_limit
        trigger: savings_account_open_successful
        auto_trigger_conditions:
          streaming_api_conditions:
            topic: vault.core_api.v1.accounts.account_update.events
            message_content:
              - path: "['*'].account_update.status"
                values:
                  - ACCOUNT_UPDATE_STATUS_COMPLETED
                quantifier: any
      - to: open_linked_accounts_failed
        trigger: savings_account_open_failure
        auto_trigger_conditions:
          streaming_api_conditions:
            topic: vault.core_api.v1.accounts.account_update.events
            message_content:
              - path: "['*'].account_update.status"
                values:
                  - ACCOUNT_UPDATE_STATUS_COMPLETED
                  - ACCOUNT_UPDATE_STATUS_PENDING_EXECUTION
                quantifier: none
        actions:
          save_to_global_state:
            new_key_value_pairs:
              reject_reason: "Failed to activate savings account, please retry."

  choose_overdraft_limit:
    display_name: Choose overdraft limit for Checking Account
    state_ui:
      ui_panels:
        - panel_id: overdraft
          display_name: Proceed with overdraft for Checking Account
          json_definition:
            text:
              value: Enter overdraft limit
      ui_actions:
        - action_id: chosen_overdraft_limit
          event: chosen_overdraft_limit
          display_name: Set overdraft for Checking Account
          ui_inputs:
            - key: chosen_limit
              number_input:
                min_value: 0
                max_value: 10000
                precision: 0
                step: 1
    transitions:
      - to: capture_interest_application_preferences_checking
        description: Proceed
        trigger: chosen_overdraft_limit
        actions:
          save_to_global_state:
            context_keys:
              - chosen_limit

  capture_interest_application_preferences_checking:
    display_name: Capture interest application preferences for Checking Account
    state_ui:
      ui_actions:
        - action_id: set_interest_application_day
          event: checking_interest_application_day_provided
          display_name: Set interest application day for Checking Account
          ui_inputs:
            - key: interest_application_day_checking
              display_name: Interest application day (1-31)
              number_input:
                default_value: 1
                min_value: 1
                max_value: 31
                precision: 0
                step: 1
    exit_actions:
      save_to_global_state:
        context_keys:
          - interest_application_day_checking
    transitions:
      - to: create_checking_account
        description: Interest application day captured
        trigger: checking_interest_application_day_provided

  create_checking_account:
    display_name: Create the Checking Account
    entry_actions:
      vault_callback:
        path: core-api/v1/accounts
        method: POST
        arguments:
          request_id: generate_uuid()
          account:
            id: generate_uuid()
            product_id: us_checking_account_v3
            status: ACCOUNT_STATUS_PENDING
            stakeholder_ids:
              - ${user_id}
            permitted_denominations:
              - "USD"
            instance_param_vals:
              fee_free_overdraft_limit: "0"
              standard_overdraft_limit: ${chosen_limit}
              interest_application_day: ${interest_application_day_checking}
              daily_atm_withdrawal_limit: "-1"
            details: {}
        response_fields:
          - key_name: checking_account_id
            response_json_path: id
            extract_singleton_element: true
        response_event: checking_account_created
    exit_actions:
      save_to_global_state:
        context_keys:
          - checking_account_id
    transitions:
      - to: capture_standard_overdraft_transaction_coverage_preference
        description: Account provisionally created
        trigger: checking_account_created

  capture_standard_overdraft_transaction_coverage_preference:
    display_name: Capture standard overdraft transaction coverage preference for Checking Account
    state_ui:
      ui_actions:
        - action_id: include_standard_overdraft_transaction_coverage
          event: standard_overdraft_transaction_coverage_selected
          display_name: Include standard overdraft transaction coverage
        - action_id: exclude_standard_overdraft_transaction_coverage
          event: standard_overdraft_transaction_coverage_not_selected
          display_name: No standard overdraft transaction coverage
    transitions:
      - to: create_overdraft_transaction_coverage_flag
        trigger: standard_overdraft_transaction_coverage_selected
      - to: open_checking_account
        trigger: standard_overdraft_transaction_coverage_not_selected

  create_overdraft_transaction_coverage_flag:
    display_name: Create standard overdraft transaction coverage flag
    entry_actions:
      vault_callback:
        path: core-api/v1/flags
        method: POST
        arguments:
          flag:
            flagDefinitionId: "&{STANDARD_OVERDRAFT_TRANSACTION_COVERAGE}"
            accountId: ${checking_account_id}
            description: Setting overdraft transaction coverage
          requestId: generate_uuid()
        response_event: overdraft_transaction_coverage_flag_created
    transitions:
      - to: open_checking_account
        trigger: overdraft_transaction_coverage_flag_created

  open_checking_account:
    display_name: Open Checking account
    entry_actions:
      vault_callback:
        path: core-api/v1/accounts/{account.id}
        method: PUT
        arguments:
          request_id: generate_uuid()
          account:
            id: ${checking_account_id}
            status: ACCOUNT_STATUS_OPEN
          update_mask: status
        response_event: checking_account_opened
    transitions:
      - to: create_plan
        trigger: checking_account_open_successful
        auto_trigger_conditions:
          streaming_api_conditions:
            topic: vault.core_api.v1.accounts.account_update.events
            message_content:
              - path: "['*'].account_update.status"
                values:
                  - ACCOUNT_UPDATE_STATUS_COMPLETED
                quantifier: any
      - to: open_linked_accounts_failed
        trigger: checking_account_open_failure
        auto_trigger_conditions:
          streaming_api_conditions:
            topic: vault.core_api.v1.accounts.account_update.events
            message_content:
              - path: "['*'].account_update.status"
                values:
                  - ACCOUNT_UPDATE_STATUS_COMPLETED
                  - ACCOUNT_UPDATE_STATUS_PENDING_EXECUTION
                quantifier: none
        actions:
          save_to_global_state:
            new_key_value_pairs:
              reject_reason: "Failed to activate checking account, please retry."

  create_plan:
    display_name: Create plan
    entry_actions:
      vault_callback:
        path: core-api/v1/plans
        method: POST
        arguments:
          request_id: generate_uuid()
          plan:
            supervisor_contract_version_id: "&{us_v3_supervisor_contract_version}"
        response_fields:
          - key_name: plan_id
            response_json_path: id
            extract_singleton_element: true
        response_event: plan_created
    exit_actions:
      save_to_global_state:
        context_keys:
          - plan_id
    transitions:
      - to: add_savings_account_to_plan
        description: Plan created
        trigger: plan_created

  add_savings_account_to_plan:
    display_name: Add savings account to plan
    entry_actions:
      vault_callback:
        path: core-api/v1/plan-updates
        method: POST
        arguments:
          request_id: generate_uuid()
          plan_update:
            plan_id: ${plan_id}
            associate_account_update:
              account_id: ${savings_account_id}
        response_fields:
          - key_name: plan_update_id_savings
            response_json_path: id
            extract_singleton_element: true
        response_event: plan_updated_savings
    exit_actions:
      save_to_global_state:
        context_keys:
          - plan_update_id_savings
    transitions:
      - to: add_checking_account_to_plan
        description: Plan updated
        trigger: plan_updated_savings

  add_checking_account_to_plan:
    display_name: Add checking account to plan
    entry_actions:
      vault_callback:
        path: core-api/v1/plan-updates
        method: POST
        arguments:
          request_id: generate_uuid()
          plan_update:
            plan_id: ${plan_id}
            associate_account_update:
              account_id: ${checking_account_id}
        response_fields:
          - key_name: plan_update_id_checking
            response_json_path: id
            extract_singleton_element: true
        response_event: plan_updated_checking
    exit_actions:
      save_to_global_state:
        context_keys:
          - plan_update_id_checking
    transitions:
      - to: accounts_opened_successfully
        description: Plan updated
        trigger: plan_updated_checking

  open_linked_accounts_failed:
    display_name: Opening of linked accounts failed
    expected_context_keys:
      - reject_reason
    entry_actions:
      save_to_global_state:
        context_keys:
          - reject_reason
      add_or_replace_global_ui_panels:
        - panel_id: account_opening_failed
          display_name: Openings of linked accounts failed
          json_definition:
            key_value_table:
              items:
                Error message: "Cannot create a new plan: ${reject_reason}"

  accounts_opened_successfully:
    display_name: Accounts opened successfully

  technical_error:
    implicit: true
    implicit_transition_trigger: technical_error
    entry_actions:
      create_ticket:
        assigned_roles: [ops_user]
        title: An error has occurred when updating the plan
        description: An error has occured when adding accounts to the plan
        ticket_ui:
          ui_panels:
            - panel_id: error
              display_name: Error
              json_definition:
                error_message:
                  message: "${error_msg} Check plan ${plan_id}, it may have no associated accounts"

transforms:
  build_account_list: |
    new_context = {}
    open_accounts = json.loads(context.get('customer_open_accounts_to_check', '[]'))
    retrieved_accounts = json.loads(context['retrieved_accounts'])
    open_accounts.extend(retrieved_accounts)
    new_context['customer_open_accounts_to_check'] = json.dumps(open_accounts)
    next_page_token = context.get('next_page_token')

    if next_page_token:
      new_context['next_page_token'] = next_page_token
      return ['retrieve_more_accounts', new_context]
    else:
      return ['all_accounts_retrieved', new_context]

  extract_account_id: |
    new_context = {}
    accounts = json.loads(context.get('customer_open_accounts_to_check', '[]'))

    if len(accounts) == 0:
      return ['no_more_accounts_to_check', new_context]

    account_id_to_check = accounts.pop(0)['id']
    new_context['customer_open_accounts_to_check'] = json.dumps(accounts)
    new_context['account_id_to_check'] = account_id_to_check

    return ['account_id_extracted', new_context]

  check_for_plans: |
    plan_assocs = json.loads(context['plan_assocs'])

    if len(plan_assocs) > 0 and plan_assocs[0]['status'] == "ACCOUNT_PLAN_ASSOC_STATUS_ACTIVE":
      account_id = plan_assocs[0]['account_id']
      return ['existing_plan_found', {'reject_reason': 'Customer already has an account on an existing plan'}]
    else:
      return ['no_existing_plan_found', {}]
