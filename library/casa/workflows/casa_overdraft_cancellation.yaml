# Copyright @ 2021 Thought Machine Group Limited. All rights reserved.
---
name: Current Account Overdraft Cancellation
instance_title: Current Account Overdraft Cancellation
description: A workflow to cancel an overdraft
schema_version: 3.2.0
definition_version: 1.1.0

starting_state: retrieve_account_parameters
end_states:
  - state: cancel_failed
    result: FAILED
  - state: overdraft_cancelled
    result: SUCCESSFUL

states:
  retrieve_account_parameters:
    display_name: Retrieve account parameters
    expected_context_keys:
      - account_id
    entry_actions:
      save_to_global_state:
        new_key_value_pairs:
          account_id: ${account_id}
      vault_callback:
        path: core-api/v1/accounts/{id}
        method: GET
        arguments:
          id: ${account_id}
        response_fields:
          - key_name: arranged_overdraft_limit
            response_json_path: instance_param_vals.arranged_overdraft_limit
            extract_singleton_element: true
          - key_name: unarranged_overdraft_limit
            response_json_path: instance_param_vals.unarranged_overdraft_limit
            extract_singleton_element: true
          - key_name: account_status
            response_json_path: status
            extract_singleton_element: true
          - key_name: product_id
            response_json_path: product_id
            extract_singleton_element: true
        response_event: account_parameters_retrieved
    transitions:
      - to: check_account_open
        description: Have account parameters
        trigger: account_parameters_retrieved
    exit_actions:
      save_to_global_state:
        new_key_value_pairs:
          arranged_overdraft_limit: ${arranged_overdraft_limit}
          unarranged_overdraft_limit: ${unarranged_overdraft_limit}
          account_status: ${account_status}
          product_id: ${product_id}

  check_account_open:
    display_name: Check account open
    type: transform
    transform_ref: check_account_open
    expected_context_keys:
      - account_status
    transitions:
      - to: cancel_failed
        description: Account not open
        trigger: account_not_open
      - to: query_contract_versions
        description: Account open
        trigger: account_open

  query_contract_versions:
    display_name: Query contract versions
    entry_actions:
      vault_callback:
        path: core-api/v1/product-versions
        method: GET
        arguments:
          product_id: ${product_id}
          view: PRODUCT_VERSION_VIEW_INCLUDE_PARAMETERS
          page_size: 20
          page_token: ${next_page_token:}
        response_event: contract_versions_returned
        response_fields:
          - key_name: product_versions
            response_json_path: product_versions
            extract_singleton_element: true
          - key_name: next_page_token
            response_json_path: next_page_token
            extract_singleton_element: true
    transitions:
      - to: extract_product_parameter_details
        trigger: contract_versions_returned
        description: Contracts returned

  extract_product_parameter_details:
    display_name: Extract product parameters
    expected_context_keys:
      - next_page_token
      - product_versions
    type: transform
    transform_ref: extract_product_parameter_details
    transitions:
      - to: query_main_denomination_balance
        trigger: product_parameters_extracted
        description: Product parameters extracted
        actions:
          save_to_global_state:
            context_keys:
              - denomination
      - to: query_contract_versions
        trigger: current_product_version_not_found
        description: Fetch more product versions
      - to: cancel_failed
        trigger: no_valid_contract
        description: No current version

  query_main_denomination_balance:
    display_name: Query balances
    entry_actions:
      vault_callback:
        path: core-api/v1/balances/live
        method: GET
        arguments:
          account_ids: 
            - ${account_id}
          page_size: 100
          page_token: ${next_page_token:}
        response_event: balances_returned
        response_fields:
          - key_name: balances
            response_json_path: balances
            extract_singleton_element: true
          - key_name: next_page_token
            response_json_path: next_page_token
            extract_singleton_element: true
    transitions:
      - to: extract_balance_details
        description: Balances returned
        trigger: balances_returned

  extract_balance_details:
    display_name: Extract balances
    expected_context_keys:
      - next_page_token
      - balances
    type: transform
    transform_ref: extract_balance_details
    transitions:
      - to: check_for_existing_overdraft
        trigger: balances_extracted
        description: Balance details extracted
        actions:
          save_to_global_state:
            context_keys:
              - account_balance
      - to: query_main_denomination_balance
        trigger: balance_not_found
        description: Fetch more product versions
      - to: cancel_failed
        trigger: no_default_balance
        description: No balance found in ${denomination}

  check_for_existing_overdraft:
    display_name: Check for existing overdraft
    type: transform
    transform_ref: check_for_existing_overdraft
    transitions:
      - to: 'cancel_failed'
        description: No existing arranged overdraft
        trigger: 'no_arranged_overdraft'
      - to: 'check_not_overdrawn'
        description: Arranged overdraft exists
        trigger: 'arranged_overdraft_exists'

  check_not_overdrawn:
    description: Check to make sure the overdraft is not currently in use
    display_name: Retrieve current balance
    type: transform
    transform_ref: check_not_overdrawn
    transitions:
      - to: cancel_overdraft
        description: Not overdrawn
        trigger: overdraft_not_in_use
      - to: cancel_failed
        description: Overdrawn
        trigger: overdraft_in_use

  cancel_overdraft:
    display_name: Cancel overdraft
    description: Cancel arranged overdraft
    entry_actions:
      vault_callback:
        path: core-api/v1/account-updates
        method: POST
        arguments:
          request_id: generate_uuid()
          account_update:
            id: generate_uuid()
            account_id: ${account_id}
            instance_param_vals_update:
              instance_param_vals:
                arranged_overdraft_limit: "0"
        response_event: arranged_overdraft_cancelled
    transitions:
      - to: 'confirm_cancellation'
        description: Overdraft cancelled
        trigger: 'arranged_overdraft_cancelled'

  cancel_failed:
    display_name: Overdraft cannot be cancelled
    state_ui:
      ui_panels:
        - panel_id: overdraft
          display_name: Overdraft cannot be cancelled
          json_definition:
            text:
              value: Overdraft cannot be cancelled - ${exit_reason}

  confirm_cancellation:
    display_name: Confirm cancellation
    state_ui:
      ui_panels:
        - panel_id: overdraft
          display_name: Overdraft cancelled
          json_definition:
            text:
              value: Your arranged overdraft has now been cancelled.
      ui_actions:
        - action_id: display overdraft
          event: overdraft_displayed
          display_name: Ok
    transitions:
      - to: overdraft_cancelled
        description: overdraft displayed
        trigger: overdraft_displayed

  overdraft_cancelled:
    display_name: Overdraft cancelled

transforms:

  extract_product_parameter_details: |
    product_versions = json.loads(context.get('product_versions', '[]'))
    for version in product_versions:
      if version.get('is_current'):
        new_context = {}
        params = {param['name']:param for param in version['params']}

        if 'denomination' in params:
          new_context['denomination'] = params['denomination']['value']
          return ['product_parameters_extracted', new_context]
        else:
          return ['no_valid_contract', {'failure_message': 'Expected parameters not found'}]

    next_page_token = context.get('next_page_token')
    if next_page_token != "":
      return ['current_product_version_not_found', {'next_page_token': next_page_token}]
    else:
      return ['no_valid_contract', {'failure_message': '"Current" account version not found'}]

  extract_balance_details: |
    balance_details = json.loads(context.get('balances', '[]'))
    for balance in balance_details:
      if balance.get('denomination') == context.get('denomination') and balance.get('phase') == 'POSTING_PHASE_COMMITTED' and balance.get('account_address') == 'DEFAULT':
        return ['balances_extracted', {'account_balance': str(balance.get('amount'))}]

    next_page_token = context.get('next_page_token')
    if next_page_token != "":
      return ['balance_not_found', {'next_page_token': next_page_token}]
    else:
      return ['no_default_balance', {'failure_message': 'Default balance in main denomination not found'}]

  check_for_existing_overdraft: |
    if decimal.greaterthan(context['arranged_overdraft_limit'], '0'):
      return ['arranged_overdraft_exists', {}]
    else:
      return ['no_arranged_overdraft', {'exit_reason': 'No arranged overdraft'}]

  check_account_open: |
    if  context['account_status'] == 'ACCOUNT_STATUS_OPEN':
      return ['account_open', {}]
    else:
      return ['account_closed', {'exit_reason': 'Account not open'}]

  check_not_overdrawn: |
    if decimal.lessthan(context['account_balance'], '0'):
      return ['overdraft_in_use', {'exit_reason': 'Overdraft in use'}]
    else:
      return ['overdraft_not_in_use', {}]
